{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs20 \cf0 CSCI E-55											             Gerald Trotman\
HW#8												             01/04/15\
\
\
Part I: UrlTagunion.java\
\
For this first assignment, we were asked to take a JSON formatted file and use our Link.java class methods to extract the Urls and their corresponding tags. In the Link.java class, were methods that isolated the Urls as well as tags and timestamps. A lot of this assignment called on your ability to configure the Mapper/Reducer around the Link class which I admittedly over thought a lot. But with that said, it is very easy to configure incorrectly. I was able to get the output necessary after several attempts where I wasn\'92t exactly sure if my output was correct or not. I basically got the output for the entire JSON files with its corresponding success stamp. Since it only wanted the first 10 lines, I deleted the output in the file so that it only represented the first 10 which sits in the part1-output folder.\
\
\
Part II: UrlByDate.java\
\
For this assignment, there were a lot of moving parts. What we were asked to do was to run your Mapper/Reducer program such that if you give it a range of dates, it was supposed to output the urls with the corresponding date range and reproduce the count. The strategy was to start by doing the same thing that was done in part one but instead of outputting Urls and tags, outputting Urls and timestamps. Once this worked as expected, the next was to incorporate the date parsing that was given to us and configure that accordingly in the mapper function. This required a lot of troubleshooting and further massaging of timestamp data. I personally started by adding in logic that would extract a single corresponding timestamp from JSON based on a specific formatted date. The problem with that though was the timestamp dates in JSON had too much variance so I had to narrow the scope a little i.e. \'93massage\'94 its timestamps a little for my purposes of understanding how the date parsing worked and if my loop logic would produce output or not. Last but not least was configuring the Mapper/Reducer Config to handle command line input. That took some figuring out as well but once that was configured correctly, you called its context which in this case was in mapper and that finally worked. The WordCount logic came in handy for the Reducer and summing up the occurrences of the URLs. Very challenging/fulfilling problem. I was able to produce the corresponding output and its success stamp which its in the part2-output folder.\
\
\
}